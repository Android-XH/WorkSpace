<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!--XSwipeMenuRecyclerView-->
    <declare-styleable name="AVLoadingIndicatorView">
        <attr name="indicator">
            <flag name="BallPulse" value="0"/>
            <flag name="BallGridPulse" value="1"/>
            <flag name="BallClipRotate" value="2"/>
            <flag name="BallClipRotatePulse" value="3"/>
            <flag name="SquareSpin" value="4"/>
            <flag name="BallClipRotateMultiple" value="5"/>
            <flag name="BallPulseRise" value="6"/>
            <flag name="BallRotate" value="7"/>
            <flag name="CubeTransition" value="8"/>
            <flag name="BallZigZag" value="9"/>
            <flag name="BallZigZagDeflect" value="10"/>
            <flag name="BallTrianglePath" value="11"/>
            <flag name="BallScale" value="12"/>
            <flag name="LineScale" value="13"/>
            <flag name="LineScaleParty" value="14"/>
            <flag name="BallScaleMultiple" value="15"/>
            <flag name="BallPulseSync" value="16"/>
            <flag name="BallBeat" value="17"/>
            <flag name="LineScalePulseOut" value="18"/>
            <flag name="LineScalePulseOutRapid" value="19"/>
            <flag name="BallScaleRipple" value="20"/>
            <flag name="BallScaleRippleMultiple" value="21"/>
            <flag name="BallSpinFadeLoader" value="22"/>
            <flag name="LineSpinFadeLoader" value="23"/>
            <flag name="TriangleSkewSpin" value="24"/>
            <flag name="Pacman" value="25"/>
            <flag name="BallGridBeat" value="26"/>
            <flag name="SemiCircleSpin" value="27"/>
        </attr>
        <attr name="indicator_color" format="color"/>
    </declare-styleable>

    <declare-styleable name="SwipeMenuLayout">
        <attr name="leftViewId" format="reference" />
        <attr name="rightViewId" format="reference" />
        <attr name="contentViewId" format="reference" />
    </declare-styleable>

    <!-- RangeSeekBar -->
    <declare-styleable name="RangeSeekBar">
        <attr name="rsb_max" format="float"/>
        <attr name="rsb_min" format="float"/>
        <attr name="rsb_reserve" format="float"/>
        <attr name="rsb_cells" format="integer"/>
        <attr name="rsb_hideProgressHint" format="boolean"/>
        <attr name="rsb_lineColorSelected" format="color"/>
        <attr name="rsb_lineColorEdge" format="color"/>
        <attr name="rsb_thumbPrimaryColor" format="color"/>
        <attr name="rsb_thumbSecondaryColor" format="color"/>
        <attr name="rsb_markTextArray" format="reference"/>
        <attr name="rsb_seekBarResId" format="reference"/>
        <!-- must use 9 path ！！！-->
        <attr name="rsb_progressHintResId" format="reference"/>
        <attr name="rsb_textPadding" format="dimension" />
        <attr name="rsb_textSize" format="dimension" />
        <attr name="rsb_hintBGHeight" format="dimension" />
        <attr name="rsb_hintBGWith" format="dimension" />
        <attr name="rsb_hintBGPadding" format="dimension" />
        <attr name="rsb_seekBarHeight" format="dimension"/>
        <attr name="rsb_thumbSize" format="dimension"/>
        <attr name="rsb_cellMode" format="enum">
            <enum name="number" value="0"/>
            <enum name="other" value="1"/>
        </attr>
        <attr name="rsb_seekBarMode" format="enum">
            <enum name="single" value="1"/>
            <enum name="range" value="2"/>
        </attr>
    </declare-styleable>

    <!-- StateButton -->
    <declare-styleable name="StateButton">
        <!--text color-->
        <attr name="stateNormalTextColor" format="color|reference"/>
        <attr name="statePressedTextColor" format="color|reference"/>
        <attr name="stateUnableTextColor" format="color|reference"/>

        <!--stroke width and color, dash width, dash gap-->
        <attr name="stateStrokeDashWidth" format="dimension|reference"/>
        <attr name="stateStrokeDashGap" format="dimension|reference"/>
        <attr name="stateNormalStrokeWidth" format="dimension|reference"/>
        <attr name="statePressedStrokeWidth" format="dimension|reference"/>
        <attr name="stateUnableStrokeWidth" format="dimension|reference"/>
        <attr name="stateNormalStrokeColor" format="color|reference"/>
        <attr name="statePressedStrokeColor" format="color|reference"/>
        <attr name="stateUnableStrokeColor" format="color|reference"/>

        <!--background color-->
        <attr name="stateNormalBackgroundColor" format="color|reference"/>
        <attr name="statePressedBackgroundColor" format="color|reference"/>
        <attr name="stateUnableBackgroundColor" format="color|reference"/>

        <!--background radius-->
        <attr name="stateRadius" format="dimension|reference"/>
        <attr name="stateRound" format="boolean|reference"/>

        <!--animation duration-->
        <attr name="stateAnimationDuration" format="integer|reference"/>
    </declare-styleable>

    <!-- AndroidPicker -->
    <declare-styleable name="pickerview">
        <attr name="pickerview_gravity">
            <enum name="center" value="17"/>
            <enum name="left" value="3"/>
            <enum name="right" value="5"/>
        </attr>
        <attr name="pickerview_textSize" format="dimension"/>
        <attr name="pickerview_textColorOut" format="color"/>
        <attr name="pickerview_textColorCenter" format="color"/>
        <attr name="pickerview_dividerColor" format="color"/>
        <attr name="pickerview_lineSpacingMultiplier" format="float"/>
    </declare-styleable>

    <!-- CheckImageView -->
    <declare-styleable name="CheckImageView">
        <attr name="checked_normal" format="reference"/>
        <attr name="checked_selected" format="reference"/>
        <attr name="enabled_false" format="reference"/>
        <attr name="enabled_true" format="reference"/>
    </declare-styleable>

    <!-- QuantityView -->
    <declare-styleable name="QuantityView">
        <attr name="qv_addButtonText" format="string"/>
        <attr name="qv_addButtonBackground" format="color|reference"/>
        <attr name="qv_addButtonTextColor" format="color"/>
        <attr name="qv_removeButtonText" format="string"/>
        <attr name="qv_removeButtonBackground" format="color|reference"/>
        <attr name="qv_removeButtonTextColor" format="color"/>
        <attr name="qv_quantity" format="integer"/>
        <attr name="qv_quantityBackground" format="color|reference"/>
        <attr name="qv_quantityTextColor" format="color"/>
        <attr name="qv_quantityPadding" format="dimension"/>
        <attr name="qv_maxQuantity" format="integer"/>
        <attr name="qv_minQuantity" format="integer"/>
        <attr name="qv_buttonPaddingLeft" format="dimension"/>
        <attr name="qv_buttonPaddingTop" format="dimension"/>
        <attr name="qv_buttonPaddingRight" format="dimension"/>
        <attr name="qv_buttonPaddingBottom" format="dimension"/>
    </declare-styleable>
    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
    </declare-styleable>


    <declare-styleable name="swipelistviewstyle">
        <attr name="right_width" format="dimension"></attr>
    </declare-styleable>

    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />
            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
</resources>